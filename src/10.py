import numpy as np
from cmath import phase
from collections import defaultdict

s = '''....#.....#.#...##..........#.......#......
.....#...####..##...#......#.........#.....
.#.#...#..........#.....#.##.......#...#..#
.#..#...........#..#..#.#.......####.....#.
##..#.................#...#..........##.##.
#..##.#...#.....##.#..#...#..#..#....#....#
##...#.............#.#..........#...#.....#
#.#..##.#.#..#.#...#.....#.#.............#.
...#..##....#........#.....................
##....###..#.#.......#...#..........#..#..#
....#.#....##...###......#......#...#......
.........#.#.....#..#........#..#..##..#...
....##...#..##...#.....##.#..#....#........
............#....######......##......#...#.
#...........##...#.#......#....#....#......
......#.....#.#....#...##.###.....#...#.#..
..#.....##..........#..........#...........
..#.#..#......#......#.....#...##.......##.
.#..#....##......#.............#...........
..##.#.....#.........#....###.........#..#.
...#....#...#.#.......#...#.#.....#........
...####........#...#....#....#........##..#
.#...........#.................#...#...#..#
#................#......#..#...........#..#
..#.#.......#...........#.#......#.........
....#............#.............#.####.#.#..
.....##....#..#...........###........#...#.
.#.....#...#.#...#..#..........#..#.#......
.#.##...#........#..#...##...#...#...#.#.#.
#.......#...#...###..#....#..#...#.........
.....#...##...#.###.#...##..........##.###.
..#.....#.##..#.....#..#.....#....#....#..#
.....#.....#..............####.#.........#.
..#..#.#..#.....#..........#..#....#....#..
#.....#.#......##.....#...#...#.......#.#..
..##.##...........#..........#.............
...#..##....#...##..##......#........#....#
.....#..........##.#.##..#....##..#........
.#...#...#......#..#.##.....#...#.....##...
...##.#....#...........####.#....#.#....#..
...#....#.#..#.........#.......#..#...##...
...##..............#......#................
........................#....##..#........#'''

asts = [(x, y)  for (y, l) in enumerate(s.split('\n'))  for (x,c) in enumerate(l) if c == '#' ]

def f(asts, xy):
    (x, y) = xy
    ps = set()
    for (xx, yy) in asts:
        if (x, y) == (xx, yy):
            continue
        p = phase((x-xx) + (y-yy)*1j)
        ps.add(p)
    return len(ps)

def g(asts, xy):
    (x, y) = xy
    d = defaultdict(dict)
    for (xx, yy) in asts:
        if (x, y) == (xx, yy):
            continue
        z = ((xx-x) + (y-yy)*1j)
        d[-phase(z*1j)][abs(z)] = (xx,yy)
    return d

cs = [f(asts, xy) for xy in asts]
i0 = np.argmax(cs)
a0 = asts[i0]

def h():
    x = [(p,r) for (p, r) in sorted(g(asts, a0).items(), key=lambda p: p[0])]
    i = 0
    while x:
        for (p, d) in x:
            if not d:
                continue
            xy = d.pop(min(d))
            i += 1
            if i == 200:
                return xy
        x = [(p,d) for (p,d) in x if d]

print(cs[i0])
(x, y) = h()
print(x*100+y)
